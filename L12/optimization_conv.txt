Оптимизация вовлекает конфигурирование, настройку и определение эксплуатационных качеств на нескольких уровнях. В зависимости от Вашей роли (разработчик, DBA или комбинация обоих), Вы могли бы оптимизировать на уровне отдельных запросов SQL, приложения, сервера базы данных. 

Оптимизация на уровне аппаратных средств
1. Оптимизация использования носителей данных
2. Нагрузка процессора, большие таблицы обрабатываются медленно
3. Достаточная пропускная способность памяти.

Оптимизация на уровне базы данных
1. Правильные типы столбцов
2. Для частого обновления - меньшее количество столбцов
3. Правильные индексы
4. Правильный выбор движка
5. Рассмотреть возможности использования сжатых таблиц.
6. Правильный выбор стратегии блокировок
7. Правильная конфигурация буферный пул InnoDB, кэш ключей MyISAM и кэш запросов MySQL.

Оптимизация запросов SQL
1. Оптимизируйте ваши запросы для кэша запросов.
2. Используйте LIMIT 1, если нужно получить уникальную строку
3. Не используйте ORDER BY RAND()
4. Старайтесь не использовать SELECT *
5. Старайтесь использовать поле id везде
6. Используйте  ENUM вместо VARCHAR
7. Используйте NOT NULL, если это возможно
8. Индексируйте поля поиска
9. Используйте одинаковые типы для связываемых столбцов
10. Создавайте только индексы с высокой селективностью — селективность(selectivity) — количество разных элементов в индексе.
11. Рассмотрите возможность использования покрывающих(covering) индексов. Если все данные в запросе могут быть получены из индекса, то MySQL не будет обращаться непосредственно к таблице.
12. Для индексов по строкам часто достаточно индексировать лишь часть строки. Это может значительно уменьшить размер индекса. 
